<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html >
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="en" lang="en">
<head>
<meta charset="utf-8"/>
<title>Computers in instrumentation</title>
<link rel="stylesheet" type="text/css" href="../styles/stylesheet.css"/>
</head>
<body>
<div>
<section epub:type="chapter" id="ch_06">
<a id="page_83" class="page" style="width:70%">Page 83, 6 Computers in instrumentation</a>
<h1 class="main1">6<span class="space">&#160;</span>Computers in instrumentation</h1>
<p class="noindent">Computer techniques are now used widely in instrumentation and we present here a brief survey in order to convey the just the basic concepts. Many of the instruments described in previous sections make extensive use of digital electronic techniques, with integrated circuits often employed to provide switching and logic functions as described at the end of <a href="Chapter01.xhtml">Chapter 1 </a>and the beginning of <a href="Chapter02.xhtml">Chapter 2</a>. The gating signals for the phase-sensitive detector (<a href="Chapter05.xhtml#page_71">pp. 71</a>-<a href="Chapter05.xhtml#page_73">73</a>) or the boxcar integrator (<a href="Chapter05.xhtml#page_73">pp. 73</a>-<a href="Chapter05.xhtml#page_75">75</a>) are, for example, very conveniently generated by suitable combinations of logic gates in which the timing is controlled by the external reference signal and, in the case of the boxcar integrator, by an internal clock. Multichannel recorders and scalers (<a href="Chapter05.xhtml#page_76">pp. 76</a>-<a href="Chapter05.xhtml#page_77">77</a>) require (digital) memory as well as the timing and addressing circuitry, and may also need ADC and DAC devices to interconvert analogue and digital signals at the input and output (<a href="Chapter02.xhtml#page_22">p. 22</a>).</p>
<p class="indent3-ka">Digital integrated circuits wired together in an appropriate way can provide sequences of logical operations of great complexity. However, except for alterations in function that can be provided by switches on the instrument, the operations themselves are predetermined by the circuits and the wiring. It is in this respect that the <i>computer</i> differs most significantly from the <i>hard-wired.</i>circuits envisaged so far. Although the computer consists of logic circuits wired together (the <i>hardware</i>) to provide a relatively small number of more sophisticated operations, the order and repetition of the operations are under the control of a <i>program</i> (the <i>software).</i> The program may be modified by the designer or user of the instrument to provide different results without any change to the initial wiring of the instrument. Great versatility can therefore be achieved, and several tasks can be run in sequence so rapidly that they seem to be simultaneous. The breakthrough in the use of computing techniques has come with the development of <i>microprocessors</i>(see <a href="Chapter01.xhtml#page_18">pp. 18</a>-<a href="Chapter01.xhtml#page_19">19</a>). Only the largest experiments justified the use of a dedicated main-frame computer, which might occupy a large room and cost hundreds of thousands of pounds. A microprocessor can be contained in a package of area of a few square centimetres containing an even smaller silicon chip and cost as little as a few pounds. Both the size and cost of the integrated circuit microprocessors makes their incorporation into relatively simple instrumentation a feasible proposition. In general, such instrumentation uses not only the central processing unit (CPU) of the microprocessor, but also associated memories for both program and data, input and output devices, and possibly external storage media, so that the combination approaches the configuration of a <i>microcomputer</i> such as a &#x2018;personal computer&#x2019; (PC). Indeed, commercial microcomputers are often used as packages instead of the individual component parts put together by the instrument manufacturer.</p>
<section epub:type="chapter" id="sec_6.1">
<a id="page_84" class="page" style="width:70%">Page 84, 6 Computers in instrumentation</a>
<h2 class="h2">6.1<span class="space">&#160;</span>Applications of microprocessors in instrumentation</h2>
<p class="noindent">There are at least four ways in which microcomputers can be used in instrumentation. They are in</p>
<p class="noindent">(i)&#160;&#160;&#160;&#160; data processing;<br/>
(ii)&#160;&#160;&#160;&#160;data acquisition;<br/>
(iii)&#160;&#160;&#160;experiment management; and<br/>
(iv)&#160;&#160;&#160;feedback control.</p>
<p class="noindent">&#160;</p>
<p class="noindent">We now consider these four areas in turn.</p>
<p class="indent3-ka">Main-frame computers were seen mainly as an aid to data processing. The underlying operations in logic of a programmable computer are easily translated to very rapid arithmetic and, by the power of repetition and speed, to complicated numerical mathematics. Fourier transform methods, for example, as outlined on<a href="Chapter01.xhtml#page_9"> p. 9</a> and <a href="Chapter05.xhtml#page_80">pp. 80</a>-<a href="Chapter05.xhtml#page_82">82</a>, were possible using main-frame computers in this way, but with the data usually recorded on the instrument and the computation being performed remotely and &#x2018;off line&#x2019;. The dedicated microprocessor can, in contrast, carry out such number-crunching activities &#x2018;on line&#x2019;. Although this aspect is one of great convenience, it is possibly one of the less important of the advantages that a dedicated microprocessor can bring to instrumentation.</p>
<p class="indent3-ka">Acquisition of data under computer control provides a general and versatile method for recording data, either directly as digital information, as in a computer-based multiscaler (<a href="Chapter05.xhtml#page_77">p. 77</a>), or after conversion with an ADC from an analogue input, as in the transient recorders (<a href="Chapter05.xhtml#page_77">pp. 77</a>-<a href="Chapter05.xhtml#page_78">78</a>) or the digital storage oscilloscope (<a href="Chapter02.xhtml#page_27">pp. 27</a>-<a href="Chapter02.xhtml#page_28">28</a>). Information about the timing of events may also be recorded. The data so obtained may be further processed numerically straight away, and it may also be stored (often on magnetic disk or tape) for subsequent recall and manipulation.</p>
<p class="indent3-ka">The use of computers to run instrumentation and experiments relies on the speed with which tasks can be performed in an error-free manner. Sequences of operations at predetermined times, such as opening valves, turning on lamps and power supplies, changing spectrometer slit widths, and so on, can be carried out in the right order and virtually as fast as desired. The outcome is that entire new classes of operations can be undertaken once the limitations of human accuracy, speed, and attention span have been removed.</p>
<p class="indent3-ka">Of the four uses of computers in instrumentation, the incorporation of microprocessors in control loops (see <a href="Chapter04.xhtml">Chapter 4</a>) is one of the most fascinating and advantageous. The essence of this application is that the control law (<a href="Chapter04.xhtml#page_60">p. 60</a>) can be adjusted intelligently to suit different circumstances, and the possibility arises of adaptive control systems that can optimize themselves. This application of microprocessors is, perhaps, less obvious than the other three, and is singled out for further exploration in <a href="#sec_6.3">Section 6.3.</a></p>
</section>
<section epub:type="chapter" id="sec_6.2">
<a id="page_85" class="page" style="width:70%">Page 85, 6 Computers in instrumentation</a>
<h2 class="h2">6.2<span class="space">&#160;</span>Integrated circuit microprocessors</h2> 
<p class="noindent">Some insight into the applications of microprocessors in instrumentation can be gained from a modest understanding of their internal structure. <a href="#fig_6.1">Figure 6.1</a> shows in schematic form the essential sub-components of a typical microprocessor. An internal <i>data bus</i> links the various parts, and also conveys data to the external environment. Different operations within the</p>
<figure class="fig1" id="fig_6.1" style="margin-left:4em">
<img src="../images/page_85_1.jpg" alt="images"/>
<figcaption><p class="noindent">&#160;</p>
<p class="noindent" style="margin-left:6em;"><b>Fig.</b> 6.1 Essential elements of a microcomputer</p></figcaption></figure>
<p class="noindent">microprocessor locate a specific element of external memory, called an <b><i>address,</i></b> which is linked to the microprocessor by an <i>address bus.</i> The operations include the step reached within the external program as determined by the <i>program counter,</i> and addresses where the results of operations are to be stored or where data required may be found. The data bus in many modern microprocessors consists of sixteen parallel lines, so that the data may be transferred to and from memory sixteen bits (two bytes &#x2014; <a href="Chapter02.xhtml#page_21">see p. 21</a>) at a time. Older, or simpler, microprocessors relied on data busses eight, or even just four, bits &#x2018;wide&#x2019;. The main difference is that a number consisting of many digits (such as a large integer or a high-precision floating-point number) requires more individual transfer operations, and more complex mathematical operations, for the narrower busses. The sixteen-bit bus device, for example, can calculate or transfer 2<sup>16</sup> positive integers (0 to 65 535) in single steps, while the eight-bit microprocessor can only handle 2<sup>8</sup> integers (0 to 255) at a time. The address bus must be wide enough to cope with the amount of memory needed, and 24 bits (equivalent to more than 16 million memory elements) is not uncommon.</p>
<p class="indent3-ka"><a id="page_86" class="page">Page 86, 6 Computers in instrumentation</a>&#160;&#160;&#160;&#160; The program contained in part of the memory consists of a sequence of instructions that are located by the program counter and interpreted by the <i>instruction decoder.</i> This decoder breaks the instruction down into yet simpler logical operations that are performed by the <i>arithmetic logic unit (ALU).</i> The ALU then carries out tasks that include arithmetic (for example, addition and subtraction), logic (for example, AND or OR &#x2014;<a href="Chapter01.xhtml#page_19"> see p. 19</a>), and comparison (for example, one number equal to, greater than, or less than another). More complex manipulations can be assembled from combinations of the simpler ones. For example, multiplication can be carried out as a series of additions, and the comparison of &#x2018;greater than or equal to&#x2019; can be constructed out of the two simple inequality tests and the logical OR function. The <i>accumulator</i> is an internal memory, or <i>register,</i> used by the ALU for the local storage of data. Most microprocessors have other internal registers used for data storage and in connection with the addressing of external memory, but they are not indicated in the figure.</p>
<p class="indent3-ka">Pulses from a clock trigger each of the individual electronic steps that make up the operations described, including transfer of data to and from memory, decoding, and the internal arithmetic and logic. The clock may be a quartz-controlled oscillator on the chip itself, or may be external to it. Typical frequencies can be up to 40 MHz or more for modern microprocessors. Most internal operations take only a few clock cycles, so that millions of arithmetic or logical steps can be performed in each second.</p>
<p class="indent3-ka">An important feature of computer programs is that they sometimes need to make a <i>jump</i> to an address other than the next one in the current sequence, and particular power is imparted by the possibility of the <i>conditional jump</i> that is carried out if the results of one or more comparisons meet certain requirements. In this way, the action taken by the computer, and the program it subsequently executes, can be modified by the conditions encountered. This capability not only allows numerical calculation of enormous complexity, but also permits the adaptive control strategies that are the subject of the next section.</p>
</section>
<section epub:type="chapter" id="sec_6.3">
<h2 class="h2">6.3<span class="space">&#160;</span>Microprocessors in compensation and control</h2> 
<aside class="abc" style="margin-top:-12em;" epub:type="sidebar">
<figure class="fig1" id="fig_6.2" style="margin-left:0em">
<img src="../images/page_86_1.jpg" alt="images"/>
<figcaption><p class="noindent">&#160;</p>
<p class="aside" style="width:130%;"><b>Fig. 6.2</b> Experiment with temperature compensation</p></figcaption></figure></aside>
<p class="noindent">An interesting comparison of the different ways in which microprocessors can be used to improve instrumentation is afforded by their use in the <i>compensation</i> for temperature effects and their <i>control</i>of the temperature itself. Measurement of pH (see also pp. <a href="Chapter03.xhtml#page_48">48</a>-<a href="Chapter03.xhtml#page_49">49</a>) provides an important example in chemistry where changes of temperature can have an effect on the value obtained. The two approaches are either to allow for the known effect of temperature or to keep the temperature constant. The first method can, of course, be applied by hand, with the raw reading being corrected according to a formula or by looking up a table of corrections. It is clearly very convenient if this <i>look-up table</i> can be stored in the memory of a computer and the computer asked to carry out the calculation of the corrections before displaying the final result. <a href="#fig_6.2">Figure 6.2 </a>shows the essential elements of<a id="page_87" class="page">Page 87, 6 Computers in instrumentation</a>temperature compensation for any experiment, not necessarily the measurement of pH. Analogue electrical signals are obtained from both the experimental system and from a temperature sensor. They are both digitized for use by the computer. In the figure, two separate ADC devices are shown for clarity, although a single ADC might, in reality, be switched regularly from one task to the other. The computer now looks up the value in its table for the particular digital number that corresponds to the temperature. That is, the temperature has been converted to an address in memory. The number stored in that address is used to correct the number corresponding to the experimental quantity being measured, perhaps by simple multiplication or perhaps by using a more complex formula. In some cases, the look-up table might be stored permanently in the computer, while in others it might be generated by the computer itself for a particular set of conditions.</p>
<p class="indent3-ka"><a href="#fig_6.3">Figure 6.3</a> illustrates a temperature-controlled experiment. The control can, of course, be achieved by conventional analogue techniques such as that represented by <a href="#fig_6.3">Fig. 6.3(a)</a>. This is the most usual type of thermostatic heater. As described on <a href="Chapter04.xhtml#page_51">p. 51</a>, heat losses to the surroundings provide the cooling that balances energy input from the heater, with the error signal from the sensor being amplified to provide the necessary current. The success in rapidly achieving the required temperature, and maintaining it, without overshoot demands choice of a suitable control law, with proper damping, as discussed on<a href="Chapter04.xhtml#page_60"> p. 60</a>. It may be difficult to approach the ideal control law with analogue electronics. The computer-controlled device can have the control law tailored by the software program in memory. <a href="#fig_6.3">Figure 6.3(b)</a> shows the barest outline. The input from the sensor to the computer is digitized as in <a href="#fig_6.2">Fig. 6.2</a> by an ADC. The deviation from the desired temperature is now a quantity in numerical form within the computer, and can be altered mathematically in any fashion desired. The resulting number is then converted back to an analogue heating current by being interpreted by a DAC, and amplified. The ease of performing mathematical operations on the numbers, compared with imposing electrical responses on the voltages, is what gives the computer system its great advantage. The PID control law (<a href="Chapter04.xhtml#page_60">p. 60</a>) can readily be implemented, but so can any other. The computer can sense the rate of approach to the desired temperature and, knowing the thermal characteristics of the heater, keep a high input power applied until the temperature reaches a certain point short of the target. Since it is impossible ever to obtain <i>exact</i>temperature control, a next step in using the computer might be to apply temperature compensation corrections for the remaining small inevitable fluctuations in temperature of the experiment.</p>
<aside class="abc" style="margin-top:-37em;" epub:type="sidebar">
<figure class="fig1" id="fig_6.3" style="margin-left:0em">
<img src="../images/page_87_1.jpg" alt="images"/>
<figcaption><p class="noindent">&#160;</p>
<p class="aside" style="width:130%;"><b>Fig. 6.3</b> Experiment with temperature control:(a) analogue; (b) computer controlled</p>
</figcaption></figure></aside>
<p class="indent3-ka">The diode-array spectrometer discussed on <a href="Chapter05.xhtml#page_78">p. 78</a> and illustrated in <a href="Chapter05.xhtml#fig_5.24">Fig. 5.24</a> provides a rather different example of the use of the computer in instrumentation, since all four functions listed on<a href="Chapter06.xhtml#page_84"> p. 84</a>, including control, can be harnessed. <a href="#fig_6.4">Figure 6.4</a> illustrates how a computer may be employed in <i>data acquisition</i> from such a spectrometer. An electronic switch (probably wi
th sample-and-hold circuitry) can be instructed to connect each diode element in turn to the ADC interface with the computer, and the computer can then store
<a id="page_88" class="page">Page 88, 6 Computers in instrumentation</a>each digitized voltage in an appropriate memory location. The multiplex advantage is not necessarily lost in this sequential scanning, because each individual diode can be accumulating information at its sample-and-hold circuit throughout the experiment, and the read-out may occupy only a short period compared with the sampling period. The computer can also obtain time-integrated or time-averaged signals of its own by electrically scanning the diodes repeatedly, and adding the results to those already in memory for the appropriate channel. This operation is one of <b><i>data processing.</i></b></p>
<aside class="abc" style="margin-top:-8em;" epub:type="sidebar">
<figure class="fig1" id="fig_6.4">
<img src="../images/page_88_1.jpg" alt="images"/>
<figcaption>
<p class="aside" style="width:130%;"><b>Fig. 6.4</b> Diode-array spectrometer (<a href="Chapter05.xhtml#fig_5.24">see Fig. 5.24</a>) with computer acquisition of data</p>
</figcaption></figure></aside>
<p class="indent3-ka">One of the problems with the diode arrays is that each diode has a slightly different response to the same intensity of light, and there is also likely to be a more marked difference in response to wavelength of radiation. Each element thus produces an output signal that depends partly on its own characteristics and partly on where in the image plane of the spectrum it lies. A solution that exploits <b><i>data processing</i></b> again uses the compensation methods described earlier. A look-up table can be generated by a preliminary calibration procedure, so that the data from the computer can be normalized mathematically before output. Further sophistication can be achieved by using the computer for <b><i>experiment management.</i></b> <a href="#fig_6.5">Figure 6.5</a> shows the computer able to turn a lamp on and push up a mirror to reflect its light into the spectrometer slit as well as perform the other tasks that we have already described. At suitable intervals, the computer can ask for this lamp and mirror combination to be activated, so that the diode array sees the light from a source whose characteristics can be well defined. The signals from the diodes can now be used to provide a calibration graph for the array. In reality, the calibration data would be used to reconstruct a new look-up table to provide updated compensation. This rewriting of part of the software can be regarded as a subtle form of <b><i>feedback control.</i></b></p>
<aside class="abc" style="margin-top:-4em;" epub:type="sidebar">
<figure class="fig1" id="fig_6.5">
<img src="../images/page_88_2.jpg" alt="images"/>
<figcaption>
<p class="aside" style="width:130%;"><b>Fig. 6.5</b> Diode-array spectrometer of <a href="#fig_6.4">Fig. 6.4</a> modified to include automated calibration</p>
</figcaption></figure></aside>

<p class="indent3-ka">The use of compensation information that is derived from the experiment itself is the first step in constructing so-called &#x2018;intelligent&#x2019; or &#x2018;smart&#x2019; instruments that adapt their strategy according to the conditions encountered, instead of following a fixed routine. Such <b><i>adaptive</i></b> or <b><i>optimizing control systems</i></b> are having an important impact on the capabilities of scientific instruments. A simple example, again taken from the field of spectroscopy, might involve a device designed to examine very weak fluorescence, this time with a monochromator-photomultiplier combination. The problem with such a scanning instrument used conventionally is not only the signal wasted outside the spectral band being examined 
(<a href="Chapter05.xhtml#page_77">see pp. 77</a>-<a href="Chapter05.xhtml#page_78">78</a>), but also that even more potential signal acquisition time is wasted if there is only a limited number of relatively sharp spectral features. Under adaptive computer control, the scan can be set to be much more rapid than would normally be acceptable for the required signal-to-noise ratio, and the computer can issue instructions to slow the scan down only if intensities above some predetermined level are found. The available experimental time can then be used to improve the precision of the intensity measurement of the spectral features that are present rather than in improving the precision with which it is known that no light is falling on the photomultiplier.</p>


</section></section></div></body></html>